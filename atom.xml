<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hqwayne.github.io/"/>
  <updated>2020-11-30T11:48:52.918Z</updated>
  <id>https://hqwayne.github.io/</id>
  
  <author>
    <name>Weihuiqi 津ICP备19006789号</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown笔记</title>
    <link href="https://hqwayne.github.io/2020/11/30/Markdown%E7%AC%94%E8%AE%B0/"/>
    <id>https://hqwayne.github.io/2020/11/30/Markdown笔记/</id>
    <published>2020-11-30T11:42:15.000Z</published>
    <updated>2020-11-30T11:48:52.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown碎碎念"><a href="#Markdown碎碎念" class="headerlink" title="Markdown碎碎念"></a>Markdown碎碎念</h1><h3 id="1-首行缩进两格"><a href="#1-首行缩进两格" class="headerlink" title="1.首行缩进两格"></a>1.首行缩进两格</h3><p><code>&amp;emsp;&amp;emsp;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Markdown碎碎念&quot;&gt;&lt;a href=&quot;#Markdown碎碎念&quot; class=&quot;headerlink&quot; title=&quot;Markdown碎碎念&quot;&gt;&lt;/a&gt;Markdown碎碎念&lt;/h1&gt;&lt;h3 id=&quot;1-首行缩进两格&quot;&gt;&lt;a href=&quot;#1-首行缩进两格&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ML记录</title>
    <link href="https://hqwayne.github.io/2020/11/30/ML%E8%AE%B0%E5%BD%95/"/>
    <id>https://hqwayne.github.io/2020/11/30/ML记录/</id>
    <published>2020-11-30T05:37:07.000Z</published>
    <updated>2020-12-01T11:06:20.008Z</updated>
    
    <content type="html"><![CDATA[<h4 id="本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。"><a href="#本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。" class="headerlink" title="本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。"></a>本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。</h4><h1 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h1><h4 id="基本形式："><a href="#基本形式：" class="headerlink" title="基本形式："></a>基本形式：</h4><p>&emsp;&emsp;线性模型是通过训练一个对所有属性的线性组合来进行预测的函数，即：</p><script type="math/tex; mode=display">f(x) = w_1x_1 + w_2x_2 + ... + w_dx_d + b</script><p>&emsp;&emsp;一般向量形式写成：</p><script type="math/tex; mode=display">f(x) = w^Tx + b</script><h2 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h2><p>&emsp;&emsp;线性回归是回归模型中的一种，其假设特征与目标值（label）之间线性相关，通过损失函数（loss函数）迭代求解loss值最小时的参数$w$和$b$,公式表达如下：</p><p>$f(x_i) = wx_i + b$ 使得 $f(x_i) \approx y_i$</p><h2 id="损失函数（loss函数）"><a href="#损失函数（loss函数）" class="headerlink" title="损失函数（loss函数）"></a>损失函数（loss函数）</h2><h3 id="1-1-均方误差（mean-square-error-MSE"><a href="#1-1-均方误差（mean-square-error-MSE" class="headerlink" title="1.1 均方误差（mean-square error,MSE):"></a>1.1 均方误差（mean-square error,MSE):</h3><p>&emsp;&emsp;均方误差是回归任务中最常见的性能度量，以线性回归为例公式为：</p><script type="math/tex; mode=display">(w^*,b^*) = argmin\sum_{i=1}^m(f(x_i)-y_i)^2</script><script type="math/tex; mode=display">= argmin\sum_{i=1}^m(y_i-wx_i-b)</script><p>&emsp;&emsp;均方误差的几何意义对应了常用的欧几里得距离，因此可以用最小二乘法来使均方误差最小化。以线性回归为例，最小二乘法就是找到一条直线使所有样本到直线上的欧式距离之和最小。公式求解推导过程如下：</p><p>已知$E(w,b) = \sum_{i = 1}^m(y_i-wx_i -b)$,所以：</p><p>&emsp;&emsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。&quot;&gt;&lt;a href=&quot;#本篇为深度学习入门篇，内容包括线性回归、逻辑（logitc）回归、bp神经网络网络等模型的原理、公式推导及代码实现。&quot; cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python实现爬虫爬取数据</title>
    <link href="https://hqwayne.github.io/2019/10/09/python%E5%AE%9E%E7%8E%B0%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
    <id>https://hqwayne.github.io/2019/10/09/python实现爬虫爬取数据/</id>
    <published>2019-10-09T11:08:46.000Z</published>
    <updated>2019-10-09T11:08:46.581Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+VPS搭建个人博客</title>
    <link href="https://hqwayne.github.io/2019/09/01/Hexo-vps%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-0/"/>
    <id>https://hqwayne.github.io/2019/09/01/Hexo-vps搭建个人博客-0/</id>
    <published>2019-09-01T02:40:41.000Z</published>
    <updated>2019-10-09T11:06:44.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h1><h3 id="本地下载Node-js和git"><a href="#本地下载Node-js和git" class="headerlink" title="本地下载Node.js和git"></a>本地下载Node.js和git</h3><p>下载Node.js(推荐在官网下载，Mac用homebrew可能会出现问题)<br>下载git（homebrew和官网均可）</p><h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><p><code>$npm install hexo-cli -g</code></p><p>在blog目录下初始化博客界面，blog目录可以是任何自己想要的名字</p><p><code>$hexo init blog</code></p><p>进入blog目录并安装相关插件</p><p><code>$cd blog</code><br><code>npm install</code><br>安装完成后需要输入命令</p><p><code>$hexo g #渲染Source目录下文件的静态页面</code><br><code>$hexo s #本地启用一个server测试博客效果</code></p><p>本地的博客效果可以在<code>http://localhost:4000/</code>查看效果</p><h1 id="服务器的配置"><a href="#服务器的配置" class="headerlink" title="服务器的配置"></a>服务器的配置</h1><p>我的服务器环境试Ubuntu 以下代码均为Ubuntu环境下操作</p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p><code>$sudo apt-get install nginx</code></p><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><p>Nginx安装完成后需要手动启动</p><p><code>sudo systemctl start nginx</code></p><p>配置完成后使用浏览器访问服务器IP，如果出现一下界面表示成功。</p><h3 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h3><p>虚拟主机（Virtual Host）可以在一台服务器上绑定多个域名，架设多个不同的网站，一般在开发机或者要部署多个小网站的服务器上需要配置虚拟主机。</p><h3 id="创建新的网站目录"><a href="#创建新的网站目录" class="headerlink" title="创建新的网站目录"></a>创建新的网站目录</h3><p>Nginx默认把网页文件存在<code>/var/www/html</code>目录。为了方便，我们在<code>/var/www/</code>目录下为每一个站点创建一个文件夹。</p><p><code>$sudo mkdir -p /var/www/blog/html</code><br><code>$sudo chown -R $USER:$USER /var/www/blog/html</code><br><code>$sudo chmod -R 755 /var/www</code></p><p>在<code>/var/www/blog/html/</code>目录下创建index.html文件。写上以下内容，用于测试虚拟主机运行情况。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to Blog!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Success! The Blog server block is working!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建虚拟主机配置文件"><a href="#创建虚拟主机配置文件" class="headerlink" title="创建虚拟主机配置文件"></a>创建虚拟主机配置文件</h3><p>在<code>/etc/nginx/conf.d/</code>创建虚拟主机配置文件<code>blog.conf</code><br>(我的服务器已经备案完成所以使用的是80端口，如果没有备案可以用8080端口代替)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line"></span><br><span class="line">        root /var/www/blog/html;</span><br><span class="line">        index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        server_name eliyar.biz www.eliyar.biz;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx服务器，使服务器设定生效</p><p><code>$sudo systemctl restart nginx</code></p><h3 id="修改本地host，验证结果（如果绑定域名到服务器这步可以跳过）"><a href="#修改本地host，验证结果（如果绑定域名到服务器这步可以跳过）" class="headerlink" title="修改本地host，验证结果（如果绑定域名到服务器这步可以跳过）"></a>修改本地host，验证结果（如果绑定域名到服务器这步可以跳过）</h3><p>在绑定域名到服务器前，需要修改本地host文件来测试。本地修改<code>/etc/hosts</code>文件。<br><code>IP 域名</code><br>能看到以下结果表示虚拟主机配置成功</p><h2 id="部署HEXO到服务器"><a href="#部署HEXO到服务器" class="headerlink" title="部署HEXO到服务器"></a>部署HEXO到服务器</h2><p>Hexo可以使用git方式部署。</p><h3 id="部署服务器环境"><a href="#部署服务器环境" class="headerlink" title="部署服务器环境"></a>部署服务器环境</h3><p>首先在服务器上安装git</p><p><code>$sudo apt-get install git</code></p><p>创建空白git仓库，并设置git hook</p><p><code>$cd ~</code><br><code>$mkdir blog.git &amp;&amp; cd blog.git</code><br><code>$git init --bare</code></p><p>在<code>/root/blog.git/hooks/post-receive</code>以下脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">GIT_REPO=/root/blog.git  #git仓库</span><br><span class="line">TMP_GIT_CLONE=/tmp/blog</span><br><span class="line">PUBLIC_WWW=/var/www/blog/html #网站目录</span><br><span class="line">rm -rf $&#123;TMP_GIT_CLONE&#125;</span><br><span class="line">git clone $GIT_REPO $TMP_GIT_CLONE</span><br><span class="line">rm -rf $&#123;PUBLIC_WWW&#125;/*</span><br><span class="line">cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125;</span><br></pre></td></tr></table></figure><p>赋予脚本的执行权限</p><p><code>$chmod +x post-receive</code></p><h3 id="配置本机环境"><a href="#配置本机环境" class="headerlink" title="配置本机环境"></a>配置本机环境</h3><p>在博客目录下运行下面命令，安装git部署工具。</p><p><code>$npm install hexo-deployer-git --save</code></p><p>修改博客的配置文件<code>_config.yml</code>,修改deploy选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  message: update</span><br><span class="line">  repo:</span><br><span class="line">    s1: root@服务器IP:/root/blog.git/,master</span><br></pre></td></tr></table></figure><p>然后运行以下代码部署到本地渲染网页服务器上。<br><code>hexo g</code><br><code>heox s</code></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.weihuiqi.com/2019/09/01/hello-world/" target="_blank" rel="noopener">Hexo更换主题</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;本地部署&quot;&gt;&lt;a href=&quot;#本地部署&quot; class=&quot;headerlink&quot; title=&quot;本地部署&quot;&gt;&lt;/a&gt;本地部署&lt;/h1&gt;&lt;h3 id=&quot;本地下载Node-js和git&quot;&gt;&lt;a href=&quot;#本地下载Node-js和git&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://hqwayne.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hqwayne.github.io/2019/09/01/hello-world/"/>
    <id>https://hqwayne.github.io/2019/09/01/hello-world/</id>
    <published>2019-08-31T17:20:13.318Z</published>
    <updated>2019-09-01T03:03:04.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
  </entry>
  
</feed>
